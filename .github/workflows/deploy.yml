name: Deploy Terraform

on:
  workflow_run:
    workflows: ["Build Docker Image"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Change directory to terraform
        run: cd terraform

      - name: Terraform Init
        run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_vpc_id: ${{ secrets.VPC_ID }}
          TF_VAR_subnet_id: ${{ secrets.SUBNET_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_vpc_id: ${{ secrets.VPC_ID }}
          TF_VAR_subnet_id: ${{ secrets.SUBNET_ID }}

      - name: Wait for EC2 Instance to Initialize
        run: sleep 15

      - name: Get Instance IP and Generate Link
        id: get_ip
        run: |
          INSTANCE_IP=$(terraform output -raw ec2_instance_public_ip | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')
          APP_URL="http://$INSTANCE_IP:9000"
          echo "Access your application at: $APP_URL"
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Liveliness Check
        run: |
          INSTANCE_IP=$(terraform output -raw ec2_instance_public_ip | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')
          APP_URL="http://$INSTANCE_IP:9000"
          echo "Performing liveliness check on $APP_URL"
          curl --fail $APP_URL || { echo "Liveliness check failed"; exit 1; }
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
